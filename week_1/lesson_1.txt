|   Introduction to PowerShell   |
=========================
- Overview of PowerShell:
  - PowerShell is a powerful command-line shell and scripting language developed by Microsoft.
  - It provides a command-line interface (CLI) for administrators to automate tasks and manage systems more efficiently.
  - PowerShell is built on the .NET Framework and designed to be object-oriented, allowing users to manipulate objects directly.

- Purpose and Advantages:
  - PowerShell is designed to automate repetitive tasks and simplify system administration.
  - It allows administrators to manage both local and remote systems from a single interface.
  - PowerShell integrates with other Microsoft products and services, such as Active Directory, Exchange Server, and Azure.
  - Its scripting capabilities enable the creation of complex automation workflows and solutions.

- Installation:
  - PowerShell comes pre-installed on Windows operating systems starting from Windows 7 and Windows Server 2008 R2.
  - For macOS and Linux, PowerShell Core (cross-platform version) can be installed from the official GitHub repository or package managers like Homebrew or apt.
  Example: 
    ```
    sudo apt-get update
    sudo apt-get install -y powershell
    ```

- Launching PowerShell:
  - Command-line interface (CLI): PowerShell can be launched by typing "powershell" in the command prompt on Windows or "pwsh" on macOS/Linux.
  - Integrated Scripting Environment (ISE): PowerShell ISE provides a graphical interface with features like code editing, debugging, and script execution.

- Getting Help:
  - PowerShell provides extensive documentation and help resources accessible via the Get-Help cmdlet.
  - Users can type "Get-Help" followed by a cmdlet name to retrieve information about its usage, syntax, and examples.
  - Online resources such as Microsoft Docs and community forums are also valuable sources of information and support for learning PowerShell.
  Example: 
    ```
    Get-Help Get-Process
    ```
