PowerShell Pipeline
=================================================================================

---------------------------------------------------------------------------------
Overview:
---------------------------------------------------------------------------------
- The PowerShell pipeline allows you to pass the output of one command (cmdlet) as input to another, enabling the chaining of commands for powerful data manipulation.
- Commands such as Select-Object, Where-Object, and ForEach-Object are frequently used in conjunction with the pipeline.

---------------------------------------------------------------------------------
Topics Covered:
---------------------------------------------------------------------------------
1. Select-Object:
   - Description: Selects specific properties of objects.
   - Syntax: Select-Object [-Property] <Object[]> [-ExcludeProperty <String[]>] [-ExpandProperty <String>] [-Unique] [-Index <Int32>] [-Skip <Int32>] [-First <Int32>] [-Last <Int32>] [<CommonParameters>]
   - Example: Get-Process | Select-Object Name, Id

2. Where-Object:
   - Description: Filters objects based on specified criteria.
   - Syntax: Where-Object [-FilterScript] <ScriptBlock> [-InputObject <psobject>] [-Property <String>] [-Value <Object>] [-EQ <Object>] [-NE <Object>] [-LT <Object>] [-LE <Object>] [-GT <Object>] [-GE <Object>] [-Like <Object>] [-NotLike <Object>] [-Match <Object>] [-NotMatch <Object>] [-Contains <Object>] [-NotContains <Object>] [-In <Object[]>] [-NotIn <Object[]>] [-Replace <String>] [-As <String>] [<CommonParameters>]
   - Example: Get-Process | Where-Object { $_.WorkingSet -gt 100MB }

3. ForEach-Object:
   - Description: Performs an operation on each object in the pipeline.
   - Syntax: ForEach-Object [-Process] <ScriptBlock> [-Begin <ScriptBlock>] [-End <ScriptBlock>] [-InputObject <psobject>] [<CommonParameters>]
   - Example: Get-ChildItem | ForEach-Object { $_.Name }

---------------------------------------------------------------------------------
Practice:
---------------------------------------------------------------------------------
- List files in a directory and filter them by file extension using Get-ChildItem and Where-Object.
- Get the process IDs and names of processes consuming the most memory using Get-Process, Sort-Object, and Select-Object.
- Display a list of running services, select specific properties using Select-Object, and format the output.
